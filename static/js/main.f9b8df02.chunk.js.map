{"version":3,"sources":["static/screenshots/clean_screen.png","static/screenshots/find_cactus.png","static/screenshots/magnifying_glass.png","static/screenshots/mole_tab.png","static/screenshots/photo_ufo.png","Components/Header.js","Components/Footer.js","Components/Carrousel.js","Pages/GameList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","to","className","React","Component","Footer","Carrousel","state","position","turn_carrousel","bind","turn_by","this","items","length","setState","src","onClick","GameList","clean_screen","find_cactus","magnifying_glass","mole_tab","photo_ufo","App","document","body","style","backgroundColor","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uHAAAA,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,8MCqB5BC,E,kDAhBb,WAAYC,GAAO,uCACVA,G,qDAGP,OACE,6BACE,uDACA,4BACE,kBAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,aAAvB,SACA,kBAAC,IAAD,CAAMD,GAAG,SAASC,UAAU,aAA5B,wB,GAVWC,IAAMC,WCYZC,E,kDAbb,WAAYL,GAAO,uCACVA,G,qDAGP,OACE,mDACuB,6BADvB,0B,GANeG,IAAMC,W,QCoEZE,G,8DAjEb,WAAYN,GAAO,IAAD,8BAChB,cAAOA,IACFO,MAAQ,CACXC,SAAS,GAEX,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBALN,E,2DAQHC,GAETA,EAAU,EACRC,KAAKL,MAAMC,SAAWI,KAAKZ,MAAMa,MAAMC,OAAO,EAChDF,KAAKG,UAAS,SAAAR,GAAK,MAAG,CACpBC,SAAWD,EAAMC,SAAWG,MAI9BC,KAAKG,SAAS,CACZP,SAAS,IAKNG,EAAU,IACbC,KAAKL,MAAMC,SAAW,EACxBI,KAAKG,UAAS,SAAAR,GAAK,MAAG,CACpBC,SAAWD,EAAMC,SAAWG,MAI9BC,KAAKG,SAAS,CACZP,SAASI,KAAKZ,MAAMa,MAAMC,OAAO,O,+BAMhC,IAAD,OACN,OACE,6BAEE,yBAAKZ,UAAU,OACb,yBAAKA,UAAU,8CACf,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,iBAAiBc,IAAKJ,KAAKZ,MAAMa,MAAMD,KAAKL,MAAMC,aAEnE,yBAAKN,UAAU,sCAGjB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,4BACf,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,OAAOe,QAAS,kBAAM,EAAKR,gBAAgB,OAE5D,yBAAKP,UAAU,2BACb,yBAAKA,UAAU,QAAQe,QAAS,kBAAM,EAAKR,eAAe,OAE5D,yBAAKP,UAAU,kC,GA1DDC,IAAMC,Y,qFC0Bfc,E,kDAjBb,WAAYlB,GAAO,uCACVA,G,qDAGP,OACE,yBAAKE,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWW,MAAO,CAACM,IAAcC,IAAaC,IAAkBC,IAAUC,OAC1E,6BACA,kBAAC,EAAD,Y,GAXapB,IAAMC,W,OCUdoB,E,kDAdb,WAAYxB,GAAO,IAAD,6BAChB,cAAOA,GACPyB,SAASC,KAAKC,MAAMC,gBAAkB,OAFtB,E,qDAKhB,OACE,yBAAK1B,UAAU,OACb,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,IAAIC,UAAWhC,IACjC,kBAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,SAASC,UAAWb,S,GAT5Bf,IAAMC,WCKJ4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJd,SAASe,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f9b8df02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clean_screen.fac063b7.png\";","module.exports = __webpack_public_path__ + \"static/media/find_cactus.5f0bd832.png\";","module.exports = __webpack_public_path__ + \"static/media/magnifying_glass.6ac593b5.png\";","module.exports = __webpack_public_path__ + \"static/media/mole_tab.dc212caa.png\";","module.exports = __webpack_public_path__ + \"static/media/photo_ufo.6ce119ec.png\";","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../App.css';\n\nclass Header extends React.Component{\n  constructor(props){\n    super (props);\n  }\n  render(){\n    return(\n      <div>\n        <h1>Minigame-Collection-App</h1>\n        <h5>\n          <Link to=\"/\" className=\"Header-UI\">Home </Link>\n          <Link to=\"/games\" className=\"Header-UI\">Minigame List </Link>\n        </h5>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nclass Footer extends React.Component{\n  constructor(props){\n    super (props);\n  }\n  render(){\n    return(\n      <p>\n        Site made with React <br/>\n        Game made in Godot\n      </p>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport './style/Carrousel.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Carrousel extends React.Component{\n  constructor(props){\n    super (props);\n    this.state = {\n      position:0,\n    }\n    this.turn_carrousel = this.turn_carrousel.bind(this);\n  }\n\n  turn_carrousel(turn_by){\n    // if conditions prevent over-/underflow\n    if (turn_by > 0){\n      if (this.state.position < this.props.items.length-1){\n        this.setState(state=>({\n          position : state.position + turn_by\n        }));\n      }\n      else{\n        this.setState({\n          position:0\n        });\n      }\n    }\n\n    else if (turn_by < 0){\n      if (this.state.position > 0){\n        this.setState(state=>({\n          position : state.position + turn_by\n        }));\n      }\n      else{\n        this.setState({\n          position:this.props.items.length-1\n        });\n      }\n    }\n  }\n\n  render(){\n    return (\n      <div>\n\n        <div className=\"row\">\n          <div className=\"col-xl-4 col-lg-4 col-md-2 col-sm-2 col-2\" />\n          <div className=\"col-lg-4 col-md-8 col-sm-8 col-8\">\n            <img className=\"carrousel-body\" src={this.props.items[this.state.position]} />\n          </div>\n          <div className=\"col-lg-4 col-md-2 col-sm-2 col-2\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-4 col-sm-4 col-4\" />\n          <div className=\"col-md-2 col-sm-2 col-2\">\n            <div className=\"left\" onClick={() => this.turn_carrousel(-1)}/>\n          </div>\n          <div className=\"col-md-2 col-sm-2 col-2\">\n            <div className=\"right\" onClick={() => this.turn_carrousel(1)}/>\n          </div>\n          <div className=\"col-md-4 col-sm-4 col-4\" />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Carrousel;\n","import React from 'react';\n\nimport Header from \"../Components/Header\"\nimport Footer from \"../Components/Footer\"\nimport Carrousel from \"../Components/Carrousel\"\n// import images\nimport clean_screen from \"../static/screenshots/clean_screen.png\"\nimport find_cactus from \"../static/screenshots/find_cactus.png\"\nimport magnifying_glass from \"../static/screenshots/magnifying_glass.png\"\nimport mole_tab from \"../static/screenshots/mole_tab.png\"\nimport photo_ufo from \"../static/screenshots/photo_ufo.png\"\n\nclass GameList extends React.Component {\n  constructor(props){\n    super (props);\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header />\n          <Carrousel items={[clean_screen, find_cactus, magnifying_glass, mole_tab, photo_ufo]}/>\n          <br />\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameList;\n","import React from 'react';\nimport './App.css';\nimport GameList from './Pages/GameList'\nimport Header from \"./Components/Header\"\n\nimport {Route, Link} from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(props){\n    super (props);\n    document.body.style.backgroundColor = \"grey\";\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <Route exact path=\"/\" component={Header}/>\n        <Route exact path=\"/games\" component={GameList}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}